{"slug":"moc","extension":"moc","name":"Qt Meta-Object Compiler File","category":"qt-meta-object-compiler-file","summary":"","developer_org":"qt-group","developer_name":"Qt Group","more_information":{"description":["Qt is a C++ development toolkit that developers can use to create graphical user interfaces (GUIs) and cross-platform applications that run on both desktop and mobile environments. The toolkit includes a several specialized features, such as the meta-object system.","The Qt meta-object system provides a signals and slots mechanism for inter-object communication, run-time type information, and the toolkit's dynamic property system. Developers can label C++ header objects as meta-objects using the Q_OBJECT class and macro. Then, when the developer compiles their program, Qt's Meta-Object Compiler produces a C++ source code file that contains the meta-object code for these classes.","When a developer compiles a program that includes a Q_OBJECT declaration in a CPP file, they must structure their code such that the Qt Meta-Object Compiler will transform the declaration into a MOC file before Qt compiles the CPP file. Otherwise, the developer's program will not compile correctly. The developer must also reference the MOC file at the end of their CPP file (e.g. #include example.moc ), to ensure it is included as Qt compiles the CPP file."]},"updated_at":"2025-08-09","sources":[{"url":"moc.html","retrieved_at":"2025-08-09"}]}